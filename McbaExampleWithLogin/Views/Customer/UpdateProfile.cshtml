@model Customer
@{
    ViewData["Title"] = "UpdateProfile";
}

<p>Update your profile</p>

<div class="row">
    <div class="col-md-4">
       <p><strong>Your Given Details:</strong></p>
       <li>Name: @Model.Name</li>
        @if(Model.Suburb == null)
        {
            <li>Suburb: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>Suburb: @Model.Suburb</li>
        }
        @if(Model.City == null)
        {
            <li>City: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>City: @Model.City</li>
        }
        @if(Model.Address == null)
        {
            <li>Address: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>Address: @Model.Address</li>
        }
        @if(Model.PostCode == null)
        {
            <li>PostCode: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>PostCode: @Model.PostCode</li>
        }
        @if(Model.State == null)
        {
            <li>State: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>State: @Model.State</li>
        }
        @if(Model.TFN == null)
        {
            <li>TFN: <strong>You have not yet provided!</strong></li>
        } else
        {
            <li>TFN: @Model.TFN</li>
        }


        <form asp-action="UpdateDetails">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="Suburb" class="control-label"></label>
                <p>Suburb</p>
                <input id="Suburb" name="Suburb" class="form-control" 
                placeholder="@Model.Suburb"
                    data-val="true" data-val-required="The Suburb field is required."
                @Html.ValidationMessage("Suburb", new { @class = "text-danger" })

                <label for="Address" class="control-label"></label>
                <p>Address</p>
                <input id="Address" name="Address" class="form-control" 
                    data-val="true" 
                    data-val-required="The Address field is required." placeholder="@Model.Address"/>
                @Html.ValidationMessage("Address", new { @class = "text-danger" })

                <label for="State" class="control-label"></label>
                <p>State</p>
                <input id="State" name="State" class="form-control" 
                    data-val="true" 
                    data-val-required="The State field is required." placeholder="@Model.State"/>
                @Html.ValidationMessage("State", new { @class = "text-danger" })

                <label for="PostCode" class="control-label"></label>
                <p>PostCode</p>
                <input id="PostCode" name="PostCode" class="form-control" 
                    data-val="true" 
                    data-val-required="The PostCode field is required." placeholder="@Model.PostCode"/>
                @Html.ValidationMessage("PostCode", new { @class = "text-danger" })

                <label for="TFN" class="control-label"></label>
                <p>TFN - Please provide it urgently</p>
                <input id="TFN" name="TFN" class="form-control" 
                    data-val="true" 
                    data-val-required="The TFN field is required." placeholder="@Model.TFN"/>
                @Html.ValidationMessage("TFN", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Update Details" class="btn btn-primary" />
            </div>
        </form>
    </div>

</div>

<br />
<div>
    <a asp-action="Index">Back to Accounts</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
